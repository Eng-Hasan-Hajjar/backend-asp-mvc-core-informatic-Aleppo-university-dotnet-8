@model IEnumerable<informatic_asp_mvc.Models.Student>

@{
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

<div class="main-content" dir="rtl" style="margin-right: 2px; padding: 20px;">
    @Html.AntiForgeryToken()

    <button type="button"
            class="btn btn-custom"
            data-bs-toggle="modal"
            data-bs-target="#studentModal">
        <i class="mdi mdi-plus-thick"></i> تسجيل طالب جديد
    </button>

    <!-- مربع التحكم -->
    <div class="d-flex flex-wrap justify-content-between align-items-center mb-3">
        <div class="d-flex" style="max-width: 800px;">
            <input type="text" class="form-control rounded-start-pill" placeholder="بحث" style="border-right: none;">
            <button class="btn btn-primary rounded-end-pill" type="button" style="border-left: none;">
                <i class="mdi mdi-magnify"></i>
            </button>
        </div>
        <button class="btn btn-primary" style="margin: 8px;">
            <i class="mdi mdi-file-export"></i> تصدير البيانات
        </button>
    </div>

    <!-- الجدول الاحترافي -->
    <div class="table-responsive" style="overflow-x:auto;">
        <table class="table table-striped" style="width: 100%;">
            <thead class="table-primary">
                <tr>
                    <th scope="col">الرقم الجامعي <i class="mdi mdi-sort"></i></th>
                    <th scope="col">الاسم الكامل <i class="mdi mdi-sort"></i></th>
                    <th scope="col">السنة الدراسية <i class="mdi mdi-sort"></i></th>
                    <th scope="col">الحالة <i class="mdi mdi-filter"></i></th>
                    <th scope="col" class="text-center">الإجراءات</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var student in Model)
                {
                    <tr>
                        <td>@student.STU_ID</td>
                        <td>@student.STU_NAME</td>
                        <td>
                            <span class="badge bg-info text-dark">
                                <i class="mdi mdi-school"></i> السنة @student.STU_YEAR
                            </span>
                        </td>
                        <td>
                            <span class="badge @GetStatusClass(student.STU_STATE)">
                                @student.STU_STATE
                            </span>
                        </td>
                        <td class="text-center">
                            <div class="d-flex justify-content-center gap-2">
                                <button type="button" class="btn btn-sm btn-action btn-edit" data-id="@student.STU_ID" data-bs-toggle="tooltip" title="تعديل">
                                    <i class="mdi mdi-pencil"></i>
                                </button>
                                <button type="button" class="btn btn-sm btn-action btn-details" data-id="@student.STU_ID" data-bs-toggle="modal" title="تفاصيل">
                                    <i class="mdi mdi-eye"></i>
                                </button>
                                <button type="button" class="btn btn-sm btn-action btn-delete" data-id="@student.STU_ID" data-bs-toggle="tooltip" title="حذف">
                                    <i class="mdi mdi-delete"></i>
                                </button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- الفوتر -->
    <div class="d-flex justify-content-between align-items-center mt-4">
        <div>عرض 1-@Model.Count() من @Model.Count() نتيجة</div>
        <nav>
            <ul class="pagination mb-0">
                <li class="page-item active"><a class="page-link" href="#">1</a></li>
            </ul>
        </nav>
    </div>
</div>

@functions {
    private string GetStatusClass(string status)
    {
        switch (status.ToLower())
        {
            case "نشط": return "bg-success text-white";
            case "موقوف": return "bg-warning text-dark";
            case "خريج": return "bg-secondary text-white";
            default: return "bg-light text-dark";
        }
    }
}

<style>
    .btn-action {
        width: 36px;
        height: 36px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        transition: all 0.3s ease;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

        .btn-action i {
            font-size: 16px;
        }

    .btn-edit {
        background-color: #f7c948;
        color: #fff;
    }

        .btn-edit:hover {
            background-color: #e0b73e;
            transform: scale(1.1);
        }

    .btn-details {
        background-color: #4a90e2;
        color: #fff;
    }

        .btn-details:hover {
            background-color: #3d7dc4;
            transform: scale(1.1);
        }

    .btn-delete {
        background-color: #e74c3c;
        color: #fff;
    }

        .btn-delete:hover {
            background-color: #c93e32;
            transform: scale(1.1);
        }
</style>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {
            // تهيئة المودال للإضافة (سيتم تحميله ديناميكيًا)
            var studentModal;

            // تهيئة المودال للتعديل (سيتم تحميله ديناميكيًا)
            var editModal;

            // تهيئة المودال لعرض التفاصيل
            var detailsModal;

            // فتح مودال الإضافة عند النقر على الزر
            $('.btn-custom').click(function () {
                $.ajax({
                    url: '@Url.Action("Create", "Student")',
                    type: 'GET',
                    success: function (data) {
                        // إضافة الموديل إلى الصفحة
                        $('body').append(data);
                        studentModal = new bootstrap.Modal(document.getElementById('studentModal'));
                        studentModal.show();
                        $.validator.unobtrusive.parse('#createForm');
                    },
                    error: function (xhr) {
                        Swal.fire({
                            icon: 'error',
                            title: 'خطأ',
                            text: 'فشل في تحميل نموذج إضافة الطالب'
                        });
                    }
                });
            });

            // معالجة إرسال نموذج الإضافة
            $(document).on('submit', '#createForm', function (e) {
                e.preventDefault();
                var form = $(this);
                $.ajax({
                    url: form.attr('action'),
                    type: 'POST',
                    data: form.serialize(),
                    success: function (response) {
                        if (response.success) {
                            studentModal.hide();
                            Swal.fire({
                                icon: 'success',
                                title: 'تم الحفظ',
                                text: 'تم إضافة الطالب بنجاح',
                                showConfirmButton: false,
                                timer: 1500
                            });
                            form[0].reset();
                            if (response.redirectUrl) {
                                window.location.href = response.redirectUrl;
                            }
                        } else {
                            if (response.errors) {
                                let errorMessages = [];
                                for (let field in response.errors) {
                                    response.errors[field].forEach(error => {
                                        errorMessages.push(`${field}: ${error}`);
                                    });
                                }
                                Swal.fire({
                                    icon: 'error',
                                    title: 'خطأ في التحقق',
                                    html: errorMessages.join('<br>')
                                });
                            }
                            if (response.partialView) {
                                $('#studentModal .modal-body').html(response.partialView);
                                $.validator.unobtrusive.parse('#createForm');
                            }
                        }
                    },
                    error: function (xhr) {
                        Swal.fire({
                            icon: 'error',
                            title: 'خطأ',
                            text: xhr.responseJSON?.error || 'حدث خطأ غير متوقع'
                        });
                    }
                });
            });

            // فتح مودال التعديل عند الضغط على زر التعديل
            $(document).on('click', '.btn-edit', function (e) {
                e.preventDefault();
                var studentId = $(this).data('id');
                $.ajax({
                    url: '@Url.Action("Edit", "Student")',
                    type: 'GET',
                    data: { id: studentId },
                    success: function (data) {
                        // إضافة الموديل إلى الصفحة
                        $('body').append(data);
                        editModal = new bootstrap.Modal(document.getElementById('editModal'));
                        editModal.show();
                        $.validator.unobtrusive.parse('#editForm');
                    },
                    error: function (xhr) {
                        Swal.fire({
                            icon: 'error',
                            title: 'خطأ',
                            text: xhr.responseJSON?.error || 'فشل في تحميل بيانات الطالب'
                        });
                    }
                });
            });

            // معالجة إرسال نموذج التعديل
            $(document).on('submit', '#editForm', function (e) {
                e.preventDefault();
                var form = $(this);
                var studentId = $('#STU_ID').val();
                if (!studentId) {
                    Swal.fire({
                        icon: 'error',
                        title: 'خطأ',
                        text: 'معرف الطالب غير موجود'
                    });
                    return;
                }
                var formData = form.serialize();
                console.log('Form Data:', formData); // تسجيل البيانات المرسلة
                $.ajax({
                    url: '@Url.Action("Edit", "Student")/' + studentId,
                    type: 'POST',
                    data: formData,
                    success: function (response) {
                        console.log('Response:', response); // تسجيل الاستجابة
                        if (response.success) {
                            editModal.hide();
                            Swal.fire({
                                icon: 'success',
                                title: 'تم التعديل',
                                text: 'تم تعديل بيانات الطالب بنجاح',
                                showConfirmButton: false,
                                timer: 1500
                            });
                            if (response.redirectUrl) {
                                window.location.href = response.redirectUrl;
                            }
                        } else {
                            if (response.errors) {
                                let errorMessages = [];
                                for (let field in response.errors) {
                                    response.errors[field].forEach(error => {
                                        errorMessages.push(`${field}: ${error}`);
                                    });
                                }
                                Swal.fire({
                                    icon: 'error',
                                    title: 'خطأ في التحقق',
                                    html: errorMessages.join('<br>')
                                });
                            }
                            if (response.partialView) {
                                $('#editModal .modal-body').html(response.partialView);
                                $.validator.unobtrusive.parse('#editForm');
                            }
                        }
                    },
                    error: function (xhr) {
                        console.log('Error:', xhr); // تسجيل الخطأ
                        Swal.fire({
                            icon: 'error',
                            title: 'خطأ',
                            text: xhr.responseJSON?.error || 'حدث خطأ غير متوقع'
                        });
                    }
                });
            });

            // فتح مودال التفاصيل
            $(document).on('click', '.btn-details', function () {
                var studentId = $(this).data('id');
                $.ajax({
                    url: '@Url.Action("Details", "Student")',
                    type: 'GET',
                    data: { id: studentId },
                    success: function (data) {
                        $('body').append(data);
                        detailsModal = new bootstrap.Modal(document.getElementById('detailsModal'));
                        detailsModal.show();
                    },
                    error: function (xhr) {
                        Swal.fire({
                            icon: 'error',
                            title: 'خطأ',
                            text: xhr.responseJSON?.error || 'فشل في تحميل تفاصيل الطالب'
                        });
                    }
                });
            });

            // معالج زر الحذف
            $(document).on('click', '.btn-delete', function () {
                var studentId = $(this).data('id');
                var row = $(this).closest('tr'); // الحصول على الصف الذي يحتوي على الطالب

                Swal.fire({
                    title: 'هل أنت متأكد؟',
                    text: 'لن تتمكن من استرجاع هذا الطالب بعد الحذف!',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'نعم، احذف!',
                    cancelButtonText: 'إلغاء'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '@Url.Action("Delete", "Student")/' + studentId,
                            type: 'POST',
                            data: {
                                id: studentId,
                                __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                            },
                            success: function (response) {
                                if (response.success) {
                                    row.remove(); // إزالة الصف من الجدول ديناميكيًا
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'تم الحذف',
                                        text: 'تم حذف الطالب بنجاح',
                                        showConfirmButton: false,
                                        timer: 1500
                                    });
                                    // تحديث عدد النتائج في الفوتر
                                    var totalRows = $('tbody tr').length;
                                    $('.d-flex.justify-content-between div:first-child').text(`عرض 1-${totalRows} من ${totalRows} نتيجة`);
                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'خطأ',
                                        text: response.error || 'فشل في حذف الطالب'
                                    });
                                }
                            },
                            error: function (xhr) {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'خطأ',
                                    text: xhr.responseJSON?.error || 'حدث خطأ غير متوقع'
                                });
                            }
                        });
                    }
                });
            });

            // إعادة تعيين مودال الإضافة عند الإغلاق
            $(document).on('hidden.bs.modal', '#studentModal', function () {
                $(this).remove(); // إزالة الموديل من DOM
            });

            // إعادة تعيين مودال التعديل عند الإغلاق
            $(document).on('hidden.bs.modal', '#editModal', function () {
                $(this).remove(); // إزالة الموديل من DOM
            });

            // إعادة تعيين مودال التفاصيل عند الإغلاق
            $(document).on('hidden.bs.modal', '#detailsModal', function () {
                $(this).remove(); // إزالة الموديل من DOM
            });

            // تهيئة الـ Tooltips
            $('[data-bs-toggle="tooltip"]').tooltip();
        });
    </script>
}